library(tidyverse)
train <- read.csv("C:/Users/user/Documents/kinase_binding/learning/data/p38/split_aveb/fold_0/train_0.csv")
View(train)
length(unique(train$rdkit))
trainsmiles <- as.character(train$rdkit)
write.csv(trainsmiles,"C:/Users/user/Documents/kinase_binding/learning/data/p38/split_aveb/fold_0/trainsmiles.csv")
sims <- read.csv("C:/Users/user/Documents/kinase_binding/learning/data/p38/split_aveb/fold_0/trainsims.csv")
sims <- sims[,-1]
rownames(sims) <- trainsmiles
colnames(sims) <- trainsmiles
dist <- 1 - sims
label <- train$Binary[i]
i <- 1
label <- train$Binary[i]
id_pos <- which(train$Binary==label)
# index of negatives
id_neg <- which(train$Binary != label)
dist_pos <- dist[i,id_pos]
View(dist_pos)
hist(dist_pos)
hist(dist_pos[1,])
dist_pos[1,]
dist_pos[1,1]
dist_pos[1,2]
dist_pos[1,3]
hist(dist_pos[1,1:ncol(dist_pos)])
class(dist_pos[1,1:ncol(dist_pos)])
hist(as.numeric(dist_pos[1,1:ncol(dist_pos)]))
dist_mat <- as.matrix(dist)
dist_pos <- dist_mat[i,id_pos]
dist_pos
dist_neg <- dist_mat[i,id_neg]
hist(dist_neg)
i <- 2
# label of the anchor
label <- train$Binary[i]
# index of drugs with same label as anchor
id_pos <- which(train$Binary == label)
# index of negatives
id_neg <- which(train$Binary != label)
dist_pos <- dist_mat[i,id_pos]
dist_neg <- dist_mat[i,id_neg]
hist(dist_pos)
hist(dist_neg)
length(which(dist_neg<0.4))
length(which(dist_neg<0.5))
sum(dist_mat<0.4)
sum(dist_mat<0.5)
#hard triplets
dist_neg_thresh <- 0.5
dist_pos_thresh <- 0.85
neg_candidates <- dist_neg[which(dist_neg <= dist_neg_thresh)]
pos_candidates <- dist_pos[which(dist_pos >= dist_pos_thresh)]
neg <- names(neg_candidates)
pos <- sample(names(pos_candidates),length(neg))
triplets_hard <- data.frame("empty",nrow = length(neg),ncol = 4)
View(triplets_hard)
triplets_hard <- data.frame(rep("empty",length(neg)),nrow = length(neg),ncol = 4)
View(triplets_hard)
triplets_hard <- data.frame(matrix(rep("empty",length(neg)),nrow = length(neg),ncol = 4))
View(triplets_hard)
# maximum allowed triples per drug
n_max <- 20
if (length(neg_candidates)>n_max) {
neg <- sample(names(neg_candidates),n_max)
} else {
neg <- names(neg_candidates)
}
colnames(triplets_hard) <- c("A","P","N","margin")
triplets_hard$A <- train$rdkit[i]
View(triplets_hard)
triplets_hard$P <- pos
View(triplets_hard)
triplets_hard$N <- neg
triplets_hard$margin <- dist_pos_thresh - dist_neg_thresh
View(triplets_hard)
prop_hard <- 0.5
# random triplets
nrandom <- round((1/prop_hard)-1) * nrow(triplets_hard)
prop_hard <- 0.3
# random triplets
nrandom <- round((1/prop_hard)-1) * nrow(triplets_hard)
prop_hard <- 0.5
neg_all <- names(dist_neg)
pos_all <- names(dist_pos)
neg_left <- neg_all[-which(neg_all %in% neg)]
pos_left <- pos_all[-which(pos_all %in% pos)]
triplets_hard <- data.frame(matrix(rep("empty",length(nrandom)),nrow = nrandom,ncol = 4))
triplets_random <- data.frame(matrix(rep("empty",length(nrandom)),nrow = nrandom,ncol = 4))
colnames(triplets_hard) <- c("A","P","N","margin")
colnames(triplets_random) <- c("A","P","N","margin")
# random triplets
nrandom <- round((1/prop_hard)-1) * nrow(triplets_hard)
neg_random <- sample(neg_left,nrandom)
pos_random <- sample(pos_left,nrandom)
triplets_random <- data.frame(matrix(rep("empty",length(nrandom)),nrow = nrandom,ncol = 4))
colnames(triplets_random) <- c("A","P","N","margin")
triplets_random$A <- train$rdkit[i]
triplets_random$P <- pos_random
triplets_random$N <- neg_random
triplets_random$margin <- "random"
View(triplets_random)
triplets_hard <- data.frame(matrix(rep("empty",length(neg)),nrow = length(neg),ncol = 4))
colnames(triplets_hard) <- c("A","P","N","margin")
triplets_hard$A <- train$rdkit[i]
triplets_hard$P <- pos
triplets_hard$N <- neg
triplets_hard$margin <- dist_pos_thresh - dist_neg_thresh
triplets <- bind_rows(triplets_hard,triplets_random)
triplets_hard$margin <- paste0("margin = ",dist_pos_thresh - dist_neg_thresh)
View(triplets_hard)
triplets <- bind_rows(triplets_hard,triplets_random)
View(triplets)
dist <- 1 - sims
dist_mat <- as.matrix(dist)
n_max <- 5
dist_neg_thresh <- 0.5
dist_pos_thresh <- 0.85
result <- NULL
for (i in 1:5) {
# label of the anchor
label <- train$Binary[i]
# index of drugs with same label as anchor
id_pos <- which(train$Binary == label)
# index of negatives
id_neg <- which(train$Binary != label)
dist_pos <- dist_mat[i,id_pos]
hist(dist_pos)
dist_neg <- dist_mat[i,id_neg]
hist(dist_neg)
#hard triplets margined
neg_candidates <- dist_neg[which(dist_neg <= dist_neg_thresh)]
pos_candidates <- dist_pos[which(dist_pos >= dist_pos_thresh)]
# all neg and all pos
neg_all <- names(dist_neg)
pos_all <- names(dist_pos)
# maximum allowed hard triplets per drug
if (length(neg_candidates)>n_max) {
neg <- sample(names(neg_candidates),n_max)
} else {
neg <- names(neg_candidates)
}
pos <- sample(names(pos_candidates),length(neg))
triplets_hard <- data.frame(matrix(rep("empty",length(neg)),nrow = length(neg),ncol = 4))
colnames(triplets_hard) <- c("A","P","N","margin")
triplets_hard$A <- train$rdkit[i]
triplets_hard$P <- pos
triplets_hard$N <- neg
triplets_hard$margin <- paste0("margin = ",dist_pos_thresh - dist_neg_thresh)
neg_left <- neg_all[-which(neg_all %in% neg)]
pos_left <- pos_all[-which(pos_all %in% pos)]
# random triplets
nrandom <- round((1/prop_hard)-1) * nrow(triplets_hard)
neg_random <- sample(neg_left,nrandom)
pos_random <- sample(pos_left,nrandom)
triplets_random <- data.frame(matrix(rep("empty",length(nrandom)),nrow = nrandom,ncol = 4))
colnames(triplets_random) <- c("A","P","N","margin")
triplets_random$A <- train$rdkit[i]
triplets_random$P <- pos_random
triplets_random$N <- neg_random
triplets_random$margin <- "random"
triplets <- bind_rows(triplets_hard,triplets_random)
result[[i]] <- triplets
}
i <- 1
result <- NULL
# label of the anchor
label <- train$Binary[i]
# index of drugs with same label as anchor
id_pos <- which(train$Binary == label)
# index of negatives
id_neg <- which(train$Binary != label)
dist_pos <- dist_mat[i,id_pos]
hist(dist_pos)
dist_neg <- dist_mat[i,id_neg]
hist(dist_neg)
neg_candidates <- dist_neg[which(dist_neg <= dist_neg_thresh)]
which(dist_neg <= dist_neg_thresh)
length(neg_candidates)
k <- 0.05
while (length(neg_candidates)==0) {
neg_candidates <- dist_neg[which(dist_neg <= (dist_neg_thresh+k))]
k <- k+0.05
}
dist <- 1 - sims
dist_mat <- as.matrix(dist)
n_max <- 5
dist_neg_thresh <- 0.5
dist_pos_thresh <- 0.85
prop_hard <- 1
i <- 1
result <- NULL
for (i in 1:5) {
# label of the anchor
label <- train$Binary[i]
# index of drugs with same label as anchor
id_pos <- which(train$Binary == label)
# index of negatives
id_neg <- which(train$Binary != label)
dist_pos <- dist_mat[i,id_pos]
hist(dist_pos)
dist_neg <- dist_mat[i,id_neg]
hist(dist_neg)
#hard triplets margined
neg_candidates <- dist_neg[which(dist_neg <= dist_neg_thresh)]
pos_candidates <- dist_pos[which(dist_pos >= dist_pos_thresh)]
k <- 0.05
while (length(neg_candidates)==0) {
neg_candidates <- dist_neg[which(dist_neg <= (dist_neg_thresh+k))]
k <- k+0.05
}
# all neg and all pos
neg_all <- names(dist_neg)
pos_all <- names(dist_pos)
# maximum allowed hard triplets per drug
if (length(neg_candidates)>n_max) {
neg <- sample(names(neg_candidates),n_max)
} else {
neg <- names(neg_candidates)
}
pos <- sample(names(pos_candidates),length(neg))
triplets_hard <- data.frame(matrix(rep("empty",length(neg)),nrow = length(neg),ncol = 4))
colnames(triplets_hard) <- c("A","P","N","margin")
triplets_hard$A <- train$rdkit[i]
triplets_hard$P <- pos
triplets_hard$N <- neg
triplets_hard$margin <- paste0("margin = ",dist_pos_thresh - dist_neg_thresh + k - 0.05)
neg_left <- neg_all[-which(neg_all %in% neg)]
pos_left <- pos_all[-which(pos_all %in% pos)]
# random triplets
nrandom <- round((1/prop_hard)-1) * nrow(triplets_hard)
neg_random <- sample(neg_left,nrandom)
pos_random <- sample(pos_left,nrandom)
triplets_random <- data.frame(matrix(rep("empty",length(nrandom)),nrow = nrandom,ncol = 4))
colnames(triplets_random) <- c("A","P","N","margin")
triplets_random$A <- train$rdkit[i]
triplets_random$P <- pos_random
triplets_random$N <- neg_random
triplets_random$margin <- "random"
triplets <- bind_rows(triplets_hard,triplets_random)
result[[i]] <- triplets
}
# label of the anchor
label <- train$Binary[i]
# index of drugs with same label as anchor
id_pos <- which(train$Binary == label)
# index of negatives
id_neg <- which(train$Binary != label)
dist_pos <- dist_mat[i,id_pos]
hist(dist_pos)
dist_neg <- dist_mat[i,id_neg]
hist(dist_neg)
neg_candidates <- dist_neg[which(dist_neg <= dist_neg_thresh)]
pos_candidates <- dist_pos[which(dist_pos >= dist_pos_thresh)]
k <- 0.05
while (length(neg_candidates)==0) {
neg_candidates <- dist_neg[which(dist_neg <= (dist_neg_thresh+k))]
k <- k+0.05
}
neg_all <- names(dist_neg)
pos_all <- names(dist_pos)
if (length(neg_candidates)>n_max) {
neg <- sample(names(neg_candidates),n_max)
} else {
neg <- names(neg_candidates)
}
pos <- sample(names(pos_candidates),length(neg))
triplets_hard <- data.frame(matrix(rep("empty",length(neg)),nrow = length(neg),ncol = 4))
colnames(triplets_hard) <- c("A","P","N","margin")
triplets_hard$A <- train$rdkit[i]
triplets_hard$P <- pos
triplets_hard$N <- neg
triplets_hard$margin <- paste0("margin = ",dist_pos_thresh - dist_neg_thresh + k - 0.05)
neg_left <- neg_all[-which(neg_all %in% neg)]
pos_left <- pos_all[-which(pos_all %in% pos)]
# random triplets
nrandom <- round((1/prop_hard)-1) * nrow(triplets_hard)
neg_random <- sample(neg_left,nrandom)
pos_random <- sample(pos_left,nrandom)
triplets_random <- data.frame(matrix(rep("empty",length(nrandom)),nrow = nrandom,ncol = 4))
colnames(triplets_random) <- c("A","P","N","margin")
triplets_random$A <- train$rdkit[i]
# random triplets
nrandom <- round((1/prop_hard)-1) * nrow(triplets_hard)
dist <- 1 - sims
dist_mat <- as.matrix(dist)
n_max <- 5
dist_neg_thresh <- 0.5
dist_pos_thresh <- 0.85
prop_hard <- 0.5
i <- 1
result <- NULL
for (i in 1:5) {
# label of the anchor
label <- train$Binary[i]
# index of drugs with same label as anchor
id_pos <- which(train$Binary == label)
# index of negatives
id_neg <- which(train$Binary != label)
dist_pos <- dist_mat[i,id_pos]
hist(dist_pos)
dist_neg <- dist_mat[i,id_neg]
hist(dist_neg)
#hard triplets margined
neg_candidates <- dist_neg[which(dist_neg <= dist_neg_thresh)]
pos_candidates <- dist_pos[which(dist_pos >= dist_pos_thresh)]
k <- 0.05
while (length(neg_candidates)==0) {
neg_candidates <- dist_neg[which(dist_neg <= (dist_neg_thresh+k))]
k <- k+0.05
}
# all neg and all pos
neg_all <- names(dist_neg)
pos_all <- names(dist_pos)
# maximum allowed hard triplets per drug
if (length(neg_candidates)>n_max) {
neg <- sample(names(neg_candidates),n_max)
} else {
neg <- names(neg_candidates)
}
pos <- sample(names(pos_candidates),length(neg))
triplets_hard <- data.frame(matrix(rep("empty",length(neg)),nrow = length(neg),ncol = 4))
colnames(triplets_hard) <- c("A","P","N","margin")
triplets_hard$A <- train$rdkit[i]
triplets_hard$P <- pos
triplets_hard$N <- neg
triplets_hard$margin <- paste0("margin = ",dist_pos_thresh - dist_neg_thresh + k - 0.05)
neg_left <- neg_all[-which(neg_all %in% neg)]
pos_left <- pos_all[-which(pos_all %in% pos)]
# random triplets
nrandom <- round((1/prop_hard)-1) * nrow(triplets_hard)
neg_random <- sample(neg_left,nrandom)
pos_random <- sample(pos_left,nrandom)
triplets_random <- data.frame(matrix(rep("empty",length(nrandom)),nrow = nrandom,ncol = 4))
colnames(triplets_random) <- c("A","P","N","margin")
triplets_random$A <- train$rdkit[i]
triplets_random$P <- pos_random
triplets_random$N <- neg_random
triplets_random$margin <- "random"
triplets <- bind_rows(triplets_hard,triplets_random)
result[[i]] <- triplets
}
df <- result[[1]]
View(df)
length(result)
triplets <- result[[1]]
View(triplets)
triplets <- result[[1]]
for (i in 2:length(result)) {
df <- result[[i]]
triplets <- bind_rows(triplets,df)
}
View(triplets)
dist <- 1 - sims
dist_mat <- as.matrix(dist)
n_max <- 5
dist_neg_thresh <- 0.5
dist_pos_thresh <- 0.85
prop_hard <- 0.5
result <- NULL
for (i in 1:nrow(train)) {
# label of the anchor
label <- train$Binary[i]
# index of drugs with same label as anchor
id_pos <- which(train$Binary == label)
# index of negatives
id_neg <- which(train$Binary != label)
dist_pos <- dist_mat[i,id_pos]
hist(dist_pos)
dist_neg <- dist_mat[i,id_neg]
hist(dist_neg)
#hard triplets margined
neg_candidates <- dist_neg[which(dist_neg <= dist_neg_thresh)]
pos_candidates <- dist_pos[which(dist_pos >= dist_pos_thresh)]
k <- 0.05
while (length(neg_candidates)==0) {
neg_candidates <- dist_neg[which(dist_neg <= (dist_neg_thresh+k))]
k <- k+0.05
}
# all neg and all pos
neg_all <- names(dist_neg)
pos_all <- names(dist_pos)
# maximum allowed hard triplets per drug
if (length(neg_candidates)>n_max) {
neg <- sample(names(neg_candidates),n_max)
} else {
neg <- names(neg_candidates)
}
pos <- sample(names(pos_candidates),length(neg))
triplets_hard <- data.frame(matrix(rep("empty",length(neg)),nrow = length(neg),ncol = 4))
colnames(triplets_hard) <- c("A","P","N","margin")
triplets_hard$A <- train$rdkit[i]
triplets_hard$P <- pos
triplets_hard$N <- neg
triplets_hard$margin <- paste0("margin = ",dist_pos_thresh - dist_neg_thresh + k - 0.05)
neg_left <- neg_all[-which(neg_all %in% neg)]
pos_left <- pos_all[-which(pos_all %in% pos)]
# random triplets
nrandom <- round((1/prop_hard)-1) * nrow(triplets_hard)
neg_random <- sample(neg_left,nrandom)
pos_random <- sample(pos_left,nrandom)
triplets_random <- data.frame(matrix(rep("empty",length(nrandom)),nrow = nrandom,ncol = 4))
colnames(triplets_random) <- c("A","P","N","margin")
triplets_random$A <- train$rdkit[i]
triplets_random$P <- pos_random
triplets_random$N <- neg_random
triplets_random$margin <- "random"
triplets <- bind_rows(triplets_hard,triplets_random)
result[[i]] <- triplets
}
triplets <- result[[1]]
for (i in 2:length(result)) {
df <- result[[i]]
triplets <- bind_rows(triplets,df)
}
View(triplets)
write.csv(triplets,"C:/Users/user/Documents/kinase_binding/learning/data/p38/split_aveb/fold_0/triplets_train_0.csv")
